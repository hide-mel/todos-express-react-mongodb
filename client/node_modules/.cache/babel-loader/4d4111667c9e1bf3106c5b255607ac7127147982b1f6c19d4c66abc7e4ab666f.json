{"ast":null,"code":"var _jsxFileName = \"/Users/katsuhidei/Documents/GitHub/todos-express-react/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport { v4 as uuidv4 } from 'uuid';\n\n//const LOCAL_STORAGE_KEY = 'todoApp.todos'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    //const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    //console.log(storedTodos)\n    //if (storedTodos) setTodos( prevTodos => [...prevTodos, ...storedTodos] )\n    fetch(\"/todos\").then(response => response.json()).then(storedTodos => {\n      if (storedTodos) setTodos([...storedTodos]);\n    });\n  }, []);\n\n  //useEffect(() => {\n  //  //localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  //}, [todos])\n\n  function toggleTodo(id) {\n    //console.log(id)\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    //console.log(todo.complete)\n    const query = {\n      \"id\": id,\n      \"complete\": todo.complete\n    };\n    setTodos(newTodos);\n  }\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    const id = uuidv4();\n    const query = {\n      \"id\": id,\n      \"name\": name,\n      \"complete\": false\n    };\n    const reqType = 'POST';\n    if (name === '') return;\n    queryToDB(query, reqType);\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: id,\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n  function handleClearTodos() {\n    const query = {\n      ids: todos.filter(todo => todo.complete).map(x => x.id)\n    };\n    console.log(query);\n    queryToDB(query, \"DELETE\");\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n  async function queryToDB(query, reqType) {\n    const response = await fetch(\"http://localhost:5001/todos/\", {\n      method: reqType,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(query)\n    });\n    console.log(response.json());\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearTodos,\n      children: \"Clear Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todos.filter(todo => !todo.complete).length, \" left to do\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"52iFtPgzl31SmfSv7XjBgNY9Iv8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TodoList","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","todos","setTodos","todoNameRef","fetch","then","response","json","storedTodos","toggleTodo","id","newTodos","todo","find","complete","query","handleAddTodo","e","name","current","value","reqType","queryToDB","prevTodos","handleClearTodos","ids","filter","map","x","console","log","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","onClick","length","_c","$RefreshReg$"],"sources":["/Users/katsuhidei/Documents/GitHub/todos-express-react/client/src/App.jsx"],"sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\nimport TodoList from './components/TodoList'\nimport { v4 as uuidv4 } from 'uuid';\n\n//const LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nconst App = () => {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    //const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    //console.log(storedTodos)\n    //if (storedTodos) setTodos( prevTodos => [...prevTodos, ...storedTodos] )\n    fetch(\"/todos\").then(\n      response => response.json()\n    ).then(\n      storedTodos => {\n      if (storedTodos) setTodos([...storedTodos] )\n    })\n  }, [])\n\n  //useEffect(() => {\n  //  //localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  //}, [todos])\n\n  \n\n  function toggleTodo(id) {\n    //console.log(id)\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    //console.log(todo.complete)\n    const query = { \"id\": id, \"complete\": todo.complete }\n\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    const id = uuidv4()\n    const query = { \"id\": id, \"name\": name, \"complete\": false }\n    const reqType = 'POST'\n    if (name === '') return\n    queryToDB(query, reqType)\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: id, name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    \n    const query = {ids: todos.filter(todo => todo.complete).map(x => x.id)}\n    console.log(query)\n    queryToDB(query, \"DELETE\")\n\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  async function queryToDB(query, reqType){\n    const response = await fetch(\"http://localhost:5001/todos/\", {\n      method: reqType,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(query)\n    });\n    console.log(response.json());\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Complete</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}